/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package WS3DApp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.Timer;
import ws3dproxy.CommandExecException;
import ws3dproxy.CommandUtility;
import ws3dproxy.WS3DProxy;
import ws3dproxy.model.Creature;
import ws3dproxy.model.Leaflet;
import ws3dproxy.model.Thing;
import ws3dproxy.model.WorldPoint;
import ws3dproxy.util.Constants;

/**
 *
 * @author daniel
 */
public class MainFrame extends javax.swing.JFrame {

    private App app;
    private Map<String, Creature> CreaturesMap = new HashMap<String, Creature>();
    private Creature selectedCreature = null;
    private boolean leftKeyPressed = false;
    private boolean upKeyPressed = false;
    private boolean rightKeyPressed = false;
    private boolean downKeyPressed = false;
    private boolean spaceKeyPressed = false;
    private boolean bKeyPressed = false;
    private boolean key1Pressed = false;
    private boolean key2Pressed = false;
    private boolean key3Pressed = false;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(App app) {
        initComponents();
        this.app = app;
        DimesionsLabel.setText("World dimensions - width: " + app.width + "; height: " + app.height);

        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if (selectedCreature != null) {
                    selectedCreature.updateState();
                    WorldPoint position = selectedCreature.getPosition();
                    NumberFormat nf = new DecimalFormat("0.00");
                    CreaturePositionTextField.setText("x:" + nf.format(position.getX()) + " - y:" + nf.format(position.getY()));
                    double orientation = Math.round(1000 * selectedCreature.getPitch()) / 1000;
                    CreatureOrientationTextField.setText(Double.toString(orientation));
                    double fuel = Math.round(1000 * selectedCreature.getFuel()) / 1000;
                    CreatureFuelTextField.setText(Double.toString(fuel));
                    CreatureScoreTextField.setText(Double.toString(selectedCreature.getAttributes().getScore()));

                    GetThingsTextArea.setText(selectedCreature.getThingsInVision().toString());

                    updateLeaflets();

                    selectedCreature.updateBag();
                    String bag = selectedCreature.getBag().printBag();
                    if (bag != null) {
                        BagTextArea.setText(bag);
                    }
                }
            }
        };
        Timer timer = new Timer(1000, action);
        timer.setRepeats(true);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        CreateCreatureButton = new javax.swing.JButton();
        XCreatureTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        YCreatureTextField = new javax.swing.JTextField();
        CreatureColorComboBox = new javax.swing.JComboBox<>();
        DimesionsLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        CreateFoodButton = new javax.swing.JButton();
        XFoodTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        YFoodTextField = new javax.swing.JTextField();
        FoodTypeComboBox = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        CreateJewelButton = new javax.swing.JButton();
        XJewelTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        YJewelTextField = new javax.swing.JTextField();
        JewelTypeComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        CreateBrickButton = new javax.swing.JButton();
        X1BrickTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Y1BrickTextField = new javax.swing.JTextField();
        BrickTypeComboBox = new javax.swing.JComboBox<>();
        X2BrickTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Y2BrickTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        MoveCreatureButton = new javax.swing.JButton();
        CreaturesComboBox = new javax.swing.JComboBox<>();
        XMoveTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        YMoveTextField = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        GetThingsTextArea = new javax.swing.JTextArea();
        PutItemButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        CreaturePositionTextField = new javax.swing.JTextField();
        CreatureOrientationTextField = new javax.swing.JTextField();
        CreatureFuelTextField = new javax.swing.JTextField();
        CreatureScoreTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        LeafletTextFieldRed1 = new javax.swing.JTextField();
        LeafletTextFieldRed2 = new javax.swing.JTextField();
        LeafletTextFieldRed3 = new javax.swing.JTextField();
        LeafletTextFieldGreen1 = new javax.swing.JTextField();
        LeafletTextFieldGreen2 = new javax.swing.JTextField();
        LeafletTextFieldGreen3 = new javax.swing.JTextField();
        LeafletTextFieldBlue1 = new javax.swing.JTextField();
        LeafletTextFieldBlue2 = new javax.swing.JTextField();
        LeafletTextFieldBlue3 = new javax.swing.JTextField();
        LeafletTextFieldYellow1 = new javax.swing.JTextField();
        LeafletTextFieldYellow2 = new javax.swing.JTextField();
        LeafletTextFieldYellow3 = new javax.swing.JTextField();
        LeafletTextFieldMagenta1 = new javax.swing.JTextField();
        LeafletTextFieldMagenta2 = new javax.swing.JTextField();
        LeafletTextFieldMagenta3 = new javax.swing.JTextField();
        LeafletTextFieldWhite1 = new javax.swing.JTextField();
        LeafletTextFieldWhite2 = new javax.swing.JTextField();
        LeafletTextFieldWhite3 = new javax.swing.JTextField();
        LeafletTextFieldComp1 = new javax.swing.JTextField();
        LeafletTextFieldComp2 = new javax.swing.JTextField();
        LeafletTextFieldComp3 = new javax.swing.JTextField();
        LeafletTextFieldScore1 = new javax.swing.JTextField();
        LeafletTextFieldScore2 = new javax.swing.JTextField();
        LeafletTextFieldScore3 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BagTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        CreateJewelButton1 = new javax.swing.JButton();
        XDelivTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        YDelivTextField = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CreateCreatureButton.setText("Create Creature");
        CreateCreatureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateCreatureButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("X:");

        jLabel2.setText("Y:");

        CreatureColorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "yellow", "red" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateCreatureButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(XCreatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(YCreatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CreatureColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateCreatureButton)
                    .addComponent(jLabel1)
                    .addComponent(XCreatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(YCreatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreatureColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CreateFoodButton.setText("Create Food");
        CreateFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateFoodButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("X:");

        jLabel4.setText("Y:");

        FoodTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "apple", "nut" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateFoodButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(XFoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(YFoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FoodTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateFoodButton)
                    .addComponent(jLabel3)
                    .addComponent(XFoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(YFoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FoodTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CreateJewelButton.setText("Create Jewel");
        CreateJewelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateJewelButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("X:");

        jLabel6.setText("Y:");

        JewelTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Green", "Blue", "Yellow", "Magenta", "White" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateJewelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(XJewelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(YJewelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JewelTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateJewelButton)
                    .addComponent(jLabel5)
                    .addComponent(XJewelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(YJewelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JewelTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CreateBrickButton.setText("Create Brick");
        CreateBrickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBrickButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("X1:");
        jLabel7.setToolTipText("");

        jLabel8.setText("Y1:");

        BrickTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Green", "Blue", "Yellow", "Magenta", "White" }));

        jLabel9.setText("X2:");
        jLabel9.setToolTipText("");

        jLabel10.setText("Y2:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateBrickButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(X1BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Y1BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(X2BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Y2BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BrickTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(X2BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(Y2BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BrickTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CreateBrickButton)
                        .addComponent(jLabel7)
                        .addComponent(X1BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(Y1BrickTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        MoveCreatureButton.setText("Click to move");
        MoveCreatureButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MoveCreatureButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MoveCreatureButtonKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MoveCreatureButtonKeyTyped(evt);
            }
        });

        CreaturesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreaturesComboBoxActionPerformed(evt);
            }
        });

        jLabel11.setText("X:");

        jLabel12.setText("Y:");

        jButton6.setText("Move to:");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        GetThingsTextArea.setEditable(false);
        GetThingsTextArea.setBackground(new java.awt.Color(255, 255, 255));
        GetThingsTextArea.setColumns(20);
        GetThingsTextArea.setRows(5);
        GetThingsTextArea.setFocusable(false);
        jScrollPane1.setViewportView(GetThingsTextArea);

        PutItemButton.setText("Put item in bag (B)");
        PutItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PutItemButtonActionPerformed(evt);
            }
        });

        jLabel13.setText("Creature:");

        CreaturePositionTextField.setEditable(false);

        CreatureOrientationTextField.setEditable(false);

        CreatureFuelTextField.setEditable(false);

        CreatureScoreTextField.setEditable(false);

        jLabel14.setText("position:");

        jLabel15.setText("orientation:");

        jLabel16.setText("fuel:");

        jLabel17.setText("score:");

        jLabel20.setText("Red");

        jLabel21.setText("Green");

        jLabel22.setText("Blue");

        jLabel23.setText("Yellow");

        jLabel24.setText("Magenta");

        jLabel25.setText("White");

        jLabel26.setText("Completed");

        jLabel27.setText("Score");

        jLabel28.setText("Bag:");

        jLabel29.setText("Leaflets:");

        BagTextArea.setColumns(20);
        BagTextArea.setRows(5);
        BagTextArea.setFocusable(false);
        jScrollPane3.setViewportView(BagTextArea);

        jButton1.setText("Eat food (Space)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel30.setText("1");

        jLabel31.setText("2");

        jLabel32.setText("3");

        jLabel33.setText("Deliver leaflet:");

        jButton3.setText("2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("3");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(31, 31, 31)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldGreen1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldGreen2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldGreen3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldBlue1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldBlue2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldBlue3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldYellow1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldYellow2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldYellow3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldMagenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldMagenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldMagenta3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldComp1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldComp2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldComp3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldWhite1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldWhite2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldWhite3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(LeafletTextFieldScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldScore2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LeafletTextFieldScore3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LeafletTextFieldRed1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LeafletTextFieldRed2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(LeafletTextFieldRed3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE))
                            .addComponent(jScrollPane3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CreaturesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(MoveCreatureButton)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(XMoveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(YMoveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PutItemButton)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(CreatureScoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CreatureFuelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CreatureOrientationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CreaturePositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreaturesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MoveCreatureButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(XMoveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(YMoveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton6)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreaturePositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CreatureOrientationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreatureFuelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CreatureScoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(PutItemButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jLabel33)
                        .addComponent(jButton3)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(LeafletTextFieldRed1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldRed2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldRed3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(LeafletTextFieldGreen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldGreen2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldGreen3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(LeafletTextFieldBlue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldBlue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldBlue3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(LeafletTextFieldYellow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldYellow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldYellow3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(LeafletTextFieldMagenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldMagenta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldMagenta3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(LeafletTextFieldWhite1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldWhite2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldWhite3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(LeafletTextFieldComp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldComp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldComp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(LeafletTextFieldScore1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldScore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LeafletTextFieldScore3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CreateJewelButton1.setText("Create Delivery Spot");
        CreateJewelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateJewelButton1ActionPerformed(evt);
            }
        });

        jLabel18.setText("X:");

        jLabel19.setText("Y:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateJewelButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(XDelivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(YDelivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateJewelButton1)
                    .addComponent(jLabel18)
                    .addComponent(XDelivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(YDelivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DimesionsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DimesionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateCreatureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateCreatureButtonActionPerformed
        String sX = XCreatureTextField.getText();
        String sY = YCreatureTextField.getText();
        int x;
        int y;
        try {
            x = Integer.parseInt(sX);
            y = Integer.parseInt(sY);
            if (x > app.width || y > app.height) {
                throw new Exception();
            }
        } catch (Exception e) {
            Random rand = new Random();
            x = rand.nextInt(app.width);
            y = rand.nextInt(app.height);
        }

        int color = CreatureColorComboBox.getSelectedIndex();

        try {
            Creature c = app.proxy.createCreature(x, y, 0, color);
            c.start();
            CreaturesComboBox.addItem(c.getName());
            CreaturesMap.put(c.getName(), c);
            if (selectedCreature == null) {
                selectedCreature = c;
                List<Leaflet> leaflets = c.getLeaflets();
                writeLeaflet(LeafletTextFieldRed1, LeafletTextFieldGreen1, LeafletTextFieldBlue1,
                        LeafletTextFieldYellow1, LeafletTextFieldMagenta1, LeafletTextFieldWhite1,
                        LeafletTextFieldScore1, leaflets.get(0));
                writeLeaflet(LeafletTextFieldRed2, LeafletTextFieldGreen2, LeafletTextFieldBlue2,
                        LeafletTextFieldYellow2, LeafletTextFieldMagenta2, LeafletTextFieldWhite2,
                        LeafletTextFieldScore2, leaflets.get(1));
                writeLeaflet(LeafletTextFieldRed3, LeafletTextFieldGreen3, LeafletTextFieldBlue3,
                        LeafletTextFieldYellow3, LeafletTextFieldMagenta3, LeafletTextFieldWhite3,
                        LeafletTextFieldScore3, leaflets.get(2));

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateCreatureButtonActionPerformed

    private void CreateFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateFoodButtonActionPerformed
        String sX = XFoodTextField.getText();
        String sY = YFoodTextField.getText();
        int x;
        int y;
        try {
            x = Integer.parseInt(sX);
            y = Integer.parseInt(sY);
            if (x > app.width || y > app.height) {
                throw new Exception();
            }
        } catch (Exception e) {
            Random rand = new Random();
            x = rand.nextInt(app.width);
            y = rand.nextInt(app.height);
        }

        int type = FoodTypeComboBox.getSelectedIndex();

        try {
            app.w.createFood(type, x, y);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateFoodButtonActionPerformed

    private void CreateJewelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateJewelButtonActionPerformed
        String sX = XJewelTextField.getText();
        String sY = YJewelTextField.getText();
        int x;
        int y;
        try {
            x = Integer.parseInt(sX);
            y = Integer.parseInt(sY);
            if (x > app.width || y > app.height) {
                throw new Exception();
            }
        } catch (Exception e) {
            Random rand = new Random();
            x = rand.nextInt(app.width);
            y = rand.nextInt(app.height);
        }

        int type = JewelTypeComboBox.getSelectedIndex();

        try {
            app.w.createJewel(type, x, y);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateJewelButtonActionPerformed

    private void CreateBrickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBrickButtonActionPerformed
        String sX1 = X1BrickTextField.getText();
        String sY1 = Y1BrickTextField.getText();
        String sX2 = X2BrickTextField.getText();
        String sY2 = Y2BrickTextField.getText();
        int x1 = -1;
        int y1 = -1;
        int x2 = -1;
        int y2 = -1;
        try {
            x1 = Integer.parseInt(sX1);
            y1 = Integer.parseInt(sY1);
            x2 = Integer.parseInt(sX2);
            y2 = Integer.parseInt(sY2);
            if (x1 > app.width || y1 > app.height || x2 > app.width || y2 > app.height) {
                x1 = -1;
                y1 = -1;
                x2 = -1;
                y2 = -1;
                throw new Exception();
            }
        } catch (Exception e) {
            System.out.println("Brick dimensions out of bounds");
        }

        if (x1 < 0 || y1 < 0 || x2 < 0 || y2 < 0) {
            return;
        }

        int type = BrickTypeComboBox.getSelectedIndex();

        try {
            app.w.createBrick(type, x1, y1, x2, y2);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateBrickButtonActionPerformed

    private void MoveCreatureButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MoveCreatureButtonKeyPressed
        int keyCode = evt.getKeyCode();
        switch (keyCode) {
            case KeyEvent.VK_UP:
                if (!upKeyPressed) {
                    try {
                        selectedCreature.move(1, 1, 0);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    upKeyPressed = true;
                }
                break;
            case KeyEvent.VK_DOWN:
                if (!downKeyPressed) {
                    try {
                        selectedCreature.move(-1, -1, 0);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    downKeyPressed = true;
                }
                break;
            case KeyEvent.VK_LEFT:
                if (!leftKeyPressed) {
                    try {
                        selectedCreature.move(1, -1, 0);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    leftKeyPressed = true;
                }
                break;
            case KeyEvent.VK_RIGHT:
                if (!rightKeyPressed) {
                    try {
                        selectedCreature.move(-1, 1, 0);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    rightKeyPressed = true;
                }
                break;
            case KeyEvent.VK_SPACE:
                if (!spaceKeyPressed) {
                    try {
                        selectedCreature.eatIt(closestFoodInVision());
                    } catch (CommandExecException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    spaceKeyPressed = true;
                }
                break;
            case KeyEvent.VK_B:
                if (!bKeyPressed) {
                    try {
                        selectedCreature.putInSack(closestItemInVision());
                    } catch (CommandExecException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    bKeyPressed = true;
                }
                break;
            case KeyEvent.VK_1:
                if (!key1Pressed) {
                    deliverLeaflets(0);
                    key1Pressed = true;
                }
                break;
            case KeyEvent.VK_2:
                if (!key2Pressed) {
                    deliverLeaflets(1);
                    key2Pressed = true;
                }
                break;
            case KeyEvent.VK_3:
                if (!key3Pressed) {
                    deliverLeaflets(2);
                    key3Pressed = true;
                }
                break;
        }
    }//GEN-LAST:event_MoveCreatureButtonKeyPressed

    private void CreaturesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreaturesComboBoxActionPerformed
        String creatureName = (String) CreaturesComboBox.getSelectedItem();
        Creature c = CreaturesMap.get(creatureName);
        if (c != null) {
            selectedCreature = c;
            List<Leaflet> leaflets = c.getLeaflets();
            writeLeaflet(LeafletTextFieldRed1, LeafletTextFieldGreen1, LeafletTextFieldBlue1,
                    LeafletTextFieldYellow1, LeafletTextFieldMagenta1, LeafletTextFieldWhite1,
                    LeafletTextFieldScore1, leaflets.get(0));
            writeLeaflet(LeafletTextFieldRed2, LeafletTextFieldGreen2, LeafletTextFieldBlue2,
                    LeafletTextFieldYellow2, LeafletTextFieldMagenta2, LeafletTextFieldWhite2,
                    LeafletTextFieldScore2, leaflets.get(1));
            writeLeaflet(LeafletTextFieldRed3, LeafletTextFieldGreen3, LeafletTextFieldBlue3,
                    LeafletTextFieldYellow3, LeafletTextFieldMagenta3, LeafletTextFieldWhite3,
                    LeafletTextFieldScore3, leaflets.get(2));
        }
    }//GEN-LAST:event_CreaturesComboBoxActionPerformed

    private void MoveCreatureButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MoveCreatureButtonKeyTyped

    }//GEN-LAST:event_MoveCreatureButtonKeyTyped

    private void MoveCreatureButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MoveCreatureButtonKeyReleased
        int keyCode = evt.getKeyCode();
        switch (keyCode) {
            case KeyEvent.VK_UP:
                try {
                    selectedCreature.move(0, 0, 0);
                } catch (Exception e) {
                    System.out.println(e);
                }
                upKeyPressed = false;
                break;
            case KeyEvent.VK_DOWN:
                try {
                    selectedCreature.move(0, 0, 0);
                } catch (Exception e) {
                    System.out.println(e);
                }
                downKeyPressed = false;
                break;
            case KeyEvent.VK_LEFT:
                try {
                    selectedCreature.move(0, 0, 0);
                } catch (Exception e) {
                    System.out.println(e);
                }
                leftKeyPressed = false;
                break;
            case KeyEvent.VK_RIGHT:
                try {
                    selectedCreature.move(0, 0, 0);
                } catch (Exception e) {
                    System.out.println(e);
                }
                rightKeyPressed = false;
                break;
            case KeyEvent.VK_SPACE:
                spaceKeyPressed = false;
                break;
            case KeyEvent.VK_B:
                bKeyPressed = false;
                break;
            case KeyEvent.VK_1:
                key1Pressed = false;
                break;
            case KeyEvent.VK_2:
                key2Pressed = false;
                break;
            case KeyEvent.VK_3:
                key3Pressed = false;
                break;
        }
    }//GEN-LAST:event_MoveCreatureButtonKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String sX = XMoveTextField.getText();
        String sY = YMoveTextField.getText();
        int x = 0;
        int y = 0;
        try {
            x = Integer.parseInt(sX);
            y = Integer.parseInt(sY);
            if (x > app.width || y > app.height) {
                throw new Exception();
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        try {
            selectedCreature.moveto(1, x, y);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private String leafletString(Leaflet l) {
        String ret = "LeafletID: " + l.getID() + "\n";
        for (Iterator<String> iter = l.getItems().keySet().iterator(); iter.hasNext();) {
            String str = iter.next(); //jewel color
            ret = ret + str + " ";
            //(total number) (collected)
            ret = ret + l.getItems().get(str)[0] + " ";
            ret = ret + l.getItems().get(str)[1] + "\n";
        }
        ret = ret + " payment= " + l.getPayment() + "\n" + " situation= " + l.getSituation() + " ";
        return ret;
    }

    private void writeLeaflet(JTextField red, JTextField green, JTextField blue,
            JTextField yellow, JTextField magenta, JTextField white,
            JTextField score, Leaflet l) {
        red.setText("0");
        green.setText("0");
        blue.setText("0");
        yellow.setText("0");
        magenta.setText("0");
        white.setText("0");
        for (Iterator<String> iter = l.getItems().keySet().iterator(); iter.hasNext();) {
            String color = iter.next();
            String needed = Integer.toString(l.getItems().get(color)[0]);
            switch (color) {
                case "Red" ->
                    red.setText(needed);
                case "Green" ->
                    green.setText(needed);
                case "Blue" ->
                    blue.setText(needed);
                case "Yellow" ->
                    yellow.setText(needed);
                case "Magenta" ->
                    magenta.setText(needed);
                case "White" ->
                    white.setText(needed);
            }
        }
        score.setText("" + l.getPayment());

    }

    private void updateLeaflets() {
        List<Leaflet> leaflets = selectedCreature.getLeaflets();
        Leaflet l1 = leaflets.get(0);
        Leaflet l2 = leaflets.get(1);
        Leaflet l3 = leaflets.get(2);
        for (Iterator<String> iter = l1.getItems().keySet().iterator(); iter.hasNext();) {
            String color = iter.next();
            String collected = Integer.toString(l1.getItems().get(color)[1]);
        }
        LeafletTextFieldComp1.setText("" + l1.getSituation());
        LeafletTextFieldComp2.setText("" + l2.getSituation());
        LeafletTextFieldComp3.setText("" + l3.getSituation());
    }

    private String closestItemInVision() {
        List<Thing> things = selectedCreature.getThingsInVision();
        String closestThing = null;
        double distance = 100;
        for (Thing t : things) {
            double thingDist = selectedCreature.calculateDistanceTo(t);
            if (thingDist < distance) {
                closestThing = t.getName();
                distance = thingDist;
            }
        }
        return closestThing;
    }

    private void PutItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PutItemButtonActionPerformed
        try {
            selectedCreature.putInSack(closestItemInVision());
        } catch (CommandExecException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PutItemButtonActionPerformed

    private void CreateJewelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateJewelButton1ActionPerformed
        String sX = XDelivTextField.getText();
        String sY = YDelivTextField.getText();
        int x;
        int y;
        try {
            x = Integer.parseInt(sX);
            y = Integer.parseInt(sY);
            if (x > app.width || y > app.height) {
                throw new Exception();
            }
        } catch (Exception e) {
            Random rand = new Random();
            x = rand.nextInt(app.width);
            y = rand.nextInt(app.height);
        }

        try {
            app.w.createDeliverySpot(x, y);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateJewelButton1ActionPerformed

    private String closestFoodInVision() {
        List<Thing> things = selectedCreature.getThingsInVision();
        String closestThing = null;
        double distance = 100;
        for (Thing t : things) {
            double thingDist = selectedCreature.calculateDistanceTo(t);
            if (thingDist < distance && (t.getCategory() == 21 || t.getCategory() == 22)) {
                closestThing = t.getName();
                distance = thingDist;
            }
        }
        return closestThing;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            selectedCreature.eatIt(closestFoodInVision());
        } catch (CommandExecException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deliverLeaflets(int position) {
        try {
            Leaflet leaflet = selectedCreature.getLeaflets().get(position);
            int completed = leaflet.getSituation();
            if (completed > 0) {
                selectedCreature.deliverLeaflet(Long.toString(leaflet.getID()));
            }
        } catch (CommandExecException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deliverLeaflets(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        deliverLeaflets(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        deliverLeaflets(2);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea BagTextArea;
    private javax.swing.JComboBox<String> BrickTypeComboBox;
    private javax.swing.JButton CreateBrickButton;
    private javax.swing.JButton CreateCreatureButton;
    private javax.swing.JButton CreateFoodButton;
    private javax.swing.JButton CreateJewelButton;
    private javax.swing.JButton CreateJewelButton1;
    private javax.swing.JComboBox<String> CreatureColorComboBox;
    private javax.swing.JTextField CreatureFuelTextField;
    private javax.swing.JTextField CreatureOrientationTextField;
    private javax.swing.JTextField CreaturePositionTextField;
    private javax.swing.JTextField CreatureScoreTextField;
    private javax.swing.JComboBox<String> CreaturesComboBox;
    private javax.swing.JLabel DimesionsLabel;
    private javax.swing.JComboBox<String> FoodTypeComboBox;
    private javax.swing.JTextArea GetThingsTextArea;
    private javax.swing.JComboBox<String> JewelTypeComboBox;
    private javax.swing.JTextField LeafletTextFieldBlue1;
    private javax.swing.JTextField LeafletTextFieldBlue2;
    private javax.swing.JTextField LeafletTextFieldBlue3;
    private javax.swing.JTextField LeafletTextFieldComp1;
    private javax.swing.JTextField LeafletTextFieldComp2;
    private javax.swing.JTextField LeafletTextFieldComp3;
    private javax.swing.JTextField LeafletTextFieldGreen1;
    private javax.swing.JTextField LeafletTextFieldGreen2;
    private javax.swing.JTextField LeafletTextFieldGreen3;
    private javax.swing.JTextField LeafletTextFieldMagenta1;
    private javax.swing.JTextField LeafletTextFieldMagenta2;
    private javax.swing.JTextField LeafletTextFieldMagenta3;
    private javax.swing.JTextField LeafletTextFieldRed1;
    private javax.swing.JTextField LeafletTextFieldRed2;
    private javax.swing.JTextField LeafletTextFieldRed3;
    private javax.swing.JTextField LeafletTextFieldScore1;
    private javax.swing.JTextField LeafletTextFieldScore2;
    private javax.swing.JTextField LeafletTextFieldScore3;
    private javax.swing.JTextField LeafletTextFieldWhite1;
    private javax.swing.JTextField LeafletTextFieldWhite2;
    private javax.swing.JTextField LeafletTextFieldWhite3;
    private javax.swing.JTextField LeafletTextFieldYellow1;
    private javax.swing.JTextField LeafletTextFieldYellow2;
    private javax.swing.JTextField LeafletTextFieldYellow3;
    private javax.swing.JButton MoveCreatureButton;
    private javax.swing.JButton PutItemButton;
    private javax.swing.JTextField X1BrickTextField;
    private javax.swing.JTextField X2BrickTextField;
    private javax.swing.JTextField XCreatureTextField;
    private javax.swing.JTextField XDelivTextField;
    private javax.swing.JTextField XFoodTextField;
    private javax.swing.JTextField XJewelTextField;
    private javax.swing.JTextField XMoveTextField;
    private javax.swing.JTextField Y1BrickTextField;
    private javax.swing.JTextField Y2BrickTextField;
    private javax.swing.JTextField YCreatureTextField;
    private javax.swing.JTextField YDelivTextField;
    private javax.swing.JTextField YFoodTextField;
    private javax.swing.JTextField YJewelTextField;
    private javax.swing.JTextField YMoveTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
